{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","className","href","alt","width","src","marginBottom","paddingLeft","class","textAlign","fontSize","fontWeight","color","target","length","substring","margin","zIndex","onClick","e","window","open","Number","lineHeight","MAX_MINT","preventDefault","abiResponse","abi","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","userSelect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79634da9.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\nfont-weight: 900 !important;\r\noutline: 6px solid var(--secondary-text) !important;\r\nfont-size: 24px;\r\nbackground-color: var(--secondary);\r\npadding: 16px 24px 12px 24px !important;\r\ntransition: all 0.2s cubic-bezier(.46,1.28,.8,1.26);\r\nfont-family: 'Grandstander', cursive; border: none !important;\r\nfilter: drop-shadow(6px 6px 0 var(--secondary-text));\r\ntext-transform: uppercase;\r\nfont-weight: 900;\r\ncolor: var(--secondary-text) !important;\r\n  :hover {\r\n    cursor: pointer !important;\r\n    background-color: var(--primary) !important;\r\n    padding: 16px 12px 12px 12px !important;\r\n    filter: drop-shadow(12px 12px 0px var(--secondary-text));color: var(--secondary-text) !important;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 2;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: stretched;\r\n  width: 50%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n    justify-content: center;\r\n  align-items: center;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 80vw;height: auto;\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 0;\r\n  margin: 200px auto;\r\n  @media (min-width: 900px) {\r\n    width: 80vw;\r\n    height: auto;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 80vw;height: auto;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  \r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`You can now mint your Bear! 🎉`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your Bear 🍯`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(mintAmount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `You did it! You minted your Bear 🎉 Go let Twitter know what's up! 💖`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 10) {\r\n      newMintAmount = 10;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen style={{ padding:0, backgroundColor: \"var(--primary)\" }}>\r\n      <s.Container\r\n        flex={1}\r\n        ai={\"center\"}\r\n        className=\"backgroundImg\"\r\n      >\r\n        <a href={CONFIG.MARKETPLACE_LINK}>\r\n          <StyledLogo alt={\"logo\"} style={{width: 100}} src={\"/logo32.png\"} />\r\n        </a>\r\n        \r\n        <ResponsiveWrapper flex={2} ai={\"center\"} jc={\"center\"} style={{marginBottom:300}}>\r\n          \r\n          <s.Container\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{\r\n              paddingLeft: 0,\r\n            }}\r\n          >      <div class=\"textertext\">\r\n          <div class=\"heading-text\">\r\n          <span class=\"letter\"><h1>T</h1></span>\r\n          <span class=\"letter\"><h1>E</h1></span>\r\n          <span class=\"letter\"><h1>D</h1></span>\r\n          <span class=\"letter\"><h1>D</h1></span>\r\n          <span class=\"letter\"><h1>Y</h1></span>\r\n          <span class=\"letter\"><h1>B</h1></span>\r\n          <span class=\"letter\"><h1>E</h1></span>\r\n          <span class=\"letter\"><h1>A</h1></span>\r\n          <span class=\"letter\"><h1>R</h1></span>\r\n          <span class=\"letter\"><h1>Z</h1></span>\r\n        </div>\r\n    \r\n      \r\n        \r\n        </div>\r\n        <div class=\"mint-container\">\r\n          <div class=\"centered-container\">\r\n            <s.TextTitle\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: 40,\r\n                fontWeight: \"bolder\",\r\n                color: \"var(--secondary-text)\",\r\n                className: \"mint-count\"\r\n              }}\r\n            >\r\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n            </s.TextTitle>\r\n            <s.TextDescription\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"var(--primary-text)\",\r\n                className: \"short-contract\"\r\n              }}\r\n            >\r\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\r\n                {truncate(CONFIG.CONTRACT_ADDRESS, 24)}\r\n              </StyledLink>\r\n            </s.TextDescription>\r\n            <span\r\n              style={{\r\n                textAlign: \"center\",\r\n                className: \"marketplace-button\"\r\n              }}\r\n            >\r\n              <StyledButton\r\n                style={{\r\n                  margin: \"0px\",\r\n                  zIndex: \"21\"\r\n                }}\r\n                onClick={(e) => {\r\n                  window.open(CONFIG.MARKETPLACE_LINK, \"_blank\");\r\n                }}\r\n              >\r\n                {CONFIG.MARKETPLACE}\r\n              </StyledButton>\r\n            </span></div>\r\n            \r\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  Sold Out!\r\n                </s.TextTitle>\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  You can still find {CONFIG.NFT_NAME} on\r\n                </s.TextDescription>\r\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                  {CONFIG.MARKETPLACE}\r\n                </StyledLink>\r\n              </>\r\n            ) : (\r\n              <><div class=\"centered-container\">\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\",lineHeight: \"1\", fontWeight: \"bold\",fontSize: \"2rem\"}}\r\n                >\r\n                 Mint is LIVE <br/>\r\n                 Price: {CONFIG.DISPLAY_COST}{\" \"}\r\n                  {CONFIG.NETWORK.SYMBOL} <br/>\r\n                  Max Mint: {CONFIG.MAX_MINT}{\" \"}\r\n                </s.TextTitle>\r\n                </div>\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                <div class=\"centered-container\">\r\n                  <s.Container ai={\"center\"} jc={\"center\"} style={{zIndex: \"21\"}}>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--secondary-text)\",\r\n                        fontWeight: \"bolder\",\r\n                        fontSize: \"25\",\r\n                      }}\r\n                    >\r\n                      Connect to the {CONFIG.NETWORK.NAME} network\r\n                    </s.TextDescription>\r\n                    <StyledButton style={{zIndex: \"21\"}}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                          }}\r\n                        >\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container></div>\r\n                ) : (\r\n                  <><div class=\"centered-container\">\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      <s.TextDescription>\r\n                      {feedback } <br/>\r\n                  Max Cost : {CONFIG.DISPLAY_COST * mintAmount}{\" \"} + GAS\r\n                </s.TextDescription>\r\n                    </s.TextDescription>\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"} style={{marginBottom: 20}}>\r\n                      <StyledButton\r\n                        style={{ lineHeight: \"1\", zIndex: \"21\"}}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          decrementMintAmount();\r\n                        }}\r\n                      >\r\n                        -\r\n                      </StyledButton>\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        <h2>{mintAmount}</h2>\r\n                      </s.TextDescription>\r\n                      <StyledButton\r\n                      style={{zIndex: \"21\"}}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          incrementMintAmount();\r\n                        }}\r\n                      >\r\n                        +\r\n                      </StyledButton>\r\n                    </s.Container>\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"} style={{zIndex: \"100\"}}>\r\n                      <StyledButton\r\n                      style={{zIndex: \"21\"}}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          claimNFTs();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {claimingNft ? \"Minting... 🍯\" : \"Mint\"}\r\n                      </StyledButton>\r\n                    </s.Container></div>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}</div>\r\n          </s.Container>\r\n        \r\n        </ResponsiveWrapper>\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n        </s.Container>\r\n      </s.Container>\r\n          <StyledImg src={\"/config/images/floor.png\"} style={{userSelect: \"none\",  margin: \"0 auto\", zIndex: \"1\"}}></StyledImg>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}